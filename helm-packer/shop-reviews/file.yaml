NAME: shop-review
LAST DEPLOYED: Mon Jan 22 17:35:53 2024
NAMESPACE: a1innocent
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: shop-reviews/templates/serviceaccount-02.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shop-reviews-02
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: shop-reviews/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shop-review-shop-reviews
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: shop-reviews/templates/configmap-02.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: review-cm-02
data:
  SERVICE_VERSION: v2
---
# Source: shop-reviews/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: review-cm
data:
  SERVICE_VERSION: v1
---
# Source: shop-reviews/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: shop-review-shop-reviews
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8092
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v2
---
# Source: shop-reviews/templates/deployment-02.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-reviews-02
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shop-reviews
      app.kubernetes.io/instance: shop-review
      version: v2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shop-reviews
        app.kubernetes.io/instance: shop-review
        version: v2
    spec:
      serviceAccountName: shop-reviews-02
      securityContext:
        {}
      containers:
        - name: shop-reviews
          securityContext:
            {}
          image: "devopseasylearning/espresso-shop-reviews:v1.0.0"
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: review-cm-02
          ports:
            - name: http
              containerPort: 80
              protocol: TCP    
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: shop-reviews/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-review-shop-reviews
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shop-reviews
      app.kubernetes.io/instance: shop-review
      version: v1
  template:
    metadata:
      labels:
        helm.sh/chart: shop-reviews-0.1.0
        app.kubernetes.io/name: shop-reviews
        app.kubernetes.io/instance: shop-review
        version: v1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: shop-review-shop-reviews
      securityContext:
        {}
      containers:
        - name: shop-reviews
          securityContext:
            {}
          image: "devopseasylearning/espresso-shop-reviews:v1.0.0"
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: review-cm
          ports:
            - name: http
              containerPort: 80
              protocol: TCP    
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: shop-reviews/templates/hpa-02.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shop-reviews-02
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shop-reviews-02
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: shop-reviews/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shop-review-shop-reviews
  labels:
    helm.sh/chart: shop-reviews-0.1.0
    app.kubernetes.io/name: shop-reviews
    app.kubernetes.io/instance: shop-review
    version: v1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shop-review-shop-reviews
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace a1innocent -o jsonpath="{.spec.ports[0].nodePort}" services shop-review-shop-reviews)
  export NODE_IP=$(kubectl get nodes --namespace a1innocent -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
